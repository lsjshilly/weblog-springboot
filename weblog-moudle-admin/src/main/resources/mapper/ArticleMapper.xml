<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lsj.weblog.admin.mapper.ArticleMapper">

    <resultMap id="BaseResultMap" type="com.lsj.weblog.admin.model.entity.Article">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="cover" column="cover" jdbcType="VARCHAR"/>
        <result property="summary" column="summary" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="TINYINT"/>
        <result property="category" column="category" jdbcType="BIGINT"/>
        <result property="readNum" column="read_num" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="isDeleted" column="is_deleted" jdbcType="TINYINT"/>
    </resultMap>

    <resultMap id="ArticleVoMap" type="com.lsj.weblog.admin.model.vo.ArticleVo">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="cover" column="cover" jdbcType="VARCHAR"/>
        <result property="summary" column="summary" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="TINYINT"/>
        <result property="category" column="category" jdbcType="BIGINT"/>
        <result property="readNum" column="read_num" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="categoryName" column="category_name" jdbcType="BIGINT"/>
        <collection property="tags" ofType="com.lsj.weblog.admin.model.vo.TagVo">
            <id property="id" column="tag_id" jdbcType="BIGINT"/>
            <result property="name" column="tag_name" jdbcType="VARCHAR"/>
        </collection>

    </resultMap>


    <sql id="Base_Column_List">
        id
        ,title,cover,
        summary,status,category,
        read_num,create_time,update_time,
        is_deleted
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_article
        where id = #{id,jdbcType=BIGINT} and is_deleted = 0
    </select>
    <select id="selectPage" resultMap="ArticleVoMap"
            parameterType="com.lsj.weblog.admin.model.dto.FindArticlePageReqDto">

        select
        a.id,
        a.title,
        a.cover,
        a.summary,
        a.status,
        a.category,
        a.read_num,
        a.create_time,
        a.update_time,
        a.is_deleted,
        c.name as category_name,
        t.id as tag_id,
        t.name as tag_name

        from tb_article a
        left join tb_category c on a.category = c.id
        left join tb_article_tag att on a.id = att.article_id
        left join tb_tag t on att.tag_id = t.id
        where a.is_deleted = 0
        <choose>
            <when test="id != null and id != ''">
                and a.id = #{id}
            </when>
            <otherwise>
                <if test="startDate != null and endDate != null">
                    and a.create_time &gt;= #{startDate,jdbcType=TIMESTAMP}
                    and a.create_time &lt;= #{endDate,jdbcType=TIMESTAMP}
                </if>

                <if test="title != null">
                    and a.title like concat('%',#{title},'%')
                </if>

                <if test="status != null">
                    and a.status = #{status}
                </if>

                <if test="categoryId != null">
                    and a.category = #{categoryId}
                </if>

                <if test="tagIds != null and tagIds.size() > 0">
                    and a.id in (
                    select article_id from tb_article_tag where tag_id in (
                    <foreach collection="tagIds" item="tagId" separator=",">
                        #{tagId}
                    </foreach>
                    )
                    )
                </if>

            </otherwise>
        </choose>

    </select>

    <update id="deleteById" parameterType="java.lang.Long">
        update
            tb_article
        set is_deleted = 1
        where id = #{id,jdbcType=BIGINT}
    </update>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lsj.weblog.admin.model.entity.Article"
            useGeneratedKeys="true">
        insert into tb_article
        ( title, cover
        , summary, status, category)
        values ( #{title,jdbcType=VARCHAR}, #{cover,jdbcType=VARCHAR}
               , #{summary,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{category,jdbcType=BIGINT})
    </insert>

    <update id="updateById" parameterType="com.lsj.weblog.admin.model.entity.Article">
        update tb_article
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="cover != null">
                cover = #{cover,jdbcType=VARCHAR},
            </if>
            <if test="summary != null">
                summary = #{summary,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="category != null">
                category = #{category,jdbcType=BIGINT},
            </if>
            <if test="readNum != null">
                read_num = #{readNum,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

</mapper>
